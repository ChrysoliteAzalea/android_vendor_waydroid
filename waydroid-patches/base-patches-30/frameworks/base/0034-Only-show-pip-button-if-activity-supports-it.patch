From a5f13124b2407e3bcc89609b1b6361ed97ab7cdb Mon Sep 17 00:00:00 2001
From: utzcoz <utzcoz@outlook.com>
Date: Sat, 31 Oct 2020 13:52:32 +0800
Subject: [PATCH 34/35] Only show pip button if activity supports it

Signed-off-by: utzcoz <utzcoz@outlook.com>
Change-Id: I1512f35a90592c247c230461bee8b882c5df98dd

Conflicts:
	core/java/android/app/Activity.java
	core/java/com/android/internal/widget/DecorCaptionView.java
---
 core/java/android/app/Activity.java                | 11 +++++++++++
 core/java/android/view/Window.java                 |  9 +++++++++
 .../android/internal/widget/DecorCaptionView.java  | 14 ++++++++++++++
 3 files changed, 34 insertions(+)

diff --git a/core/java/android/app/Activity.java b/core/java/android/app/Activity.java
index f753e59c0fad..9c5bca00df02 100644
--- a/core/java/android/app/Activity.java
+++ b/core/java/android/app/Activity.java
@@ -965,6 +965,17 @@ public class Activity extends ContextThemeWrapper
             ActivityTaskManager.getService().toggleFreeformWindowingMode(mToken);
         }
 
+        // region @bliss
+        /**
+        * Check whether the activity supports pip.
+        * @see android.R.attr#supportsPictureInPicture
+        * @hide
+        */
+        public boolean supportPictureInPictureMode() {
+            return mActivityInfo != null && mActivityInfo.supportsPictureInPicture();
+        }
+        // endregion
+
         /**
          * Puts the activity in picture-in-picture mode if the activity supports.
          * @see android.R.attr#supportsPictureInPicture
diff --git a/core/java/android/view/Window.java b/core/java/android/view/Window.java
index 6cdd56c95926..cc0b4b9a8f12 100644
--- a/core/java/android/view/Window.java
+++ b/core/java/android/view/Window.java
@@ -640,6 +640,15 @@ public abstract class Window {
          */
         void toggleFreeformWindowingMode() throws RemoteException;
 
+        // region @bliss
+        /**
+        * Check whether the activity supports pip.
+        * @see android.R.attr#supportsPictureInPicture
+        * @hide
+        */
+        boolean supportPictureInPictureMode();
+        // endregion
+
         /**
          * Puts the activity in picture-in-picture mode if the activity supports.
          * @see android.R.attr#supportsPictureInPicture
diff --git a/core/java/com/android/internal/widget/DecorCaptionView.java b/core/java/com/android/internal/widget/DecorCaptionView.java
index f11ec913a2e2..943bc056fcfc 100644
--- a/core/java/com/android/internal/widget/DecorCaptionView.java
+++ b/core/java/com/android/internal/widget/DecorCaptionView.java
@@ -150,7 +150,12 @@ public class DecorCaptionView extends ViewGroup implements View.OnTouchListener,
         // region @boringdroid
         mBack = findViewById(R.id.back_window);
         // endregion
+        // region @bliss
         mPip = findViewById(R.id.pip_window);
+        if (mPip != null && !supportPip()) {
+            mPip.setVisibility(View.GONE);
+        }
+        // endregion
         mMinimize = findViewById(R.id.minimize_window);
         mMaximize = findViewById(R.id.maximize_window);
         mClose = findViewById(R.id.close_window);
@@ -373,6 +378,14 @@ public class DecorCaptionView extends ViewGroup implements View.OnTouchListener,
             }
         }
     }
+    // region @bliss
+    private boolean supportPip() {
+        Window.WindowControllerCallback callback = mOwner.getWindowControllerCallback();
+        if (callback != null) {
+            return callback.supportPictureInPictureMode();
+        }
+        return false;
+    }
 
     private void minimizeWindow() {
         Window.WindowControllerCallback callback = mOwner.getWindowControllerCallback();
@@ -387,6 +400,7 @@ public class DecorCaptionView extends ViewGroup implements View.OnTouchListener,
 			callback.enterPictureInPictureModeIfPossible(); /* Send the task to PIP mode if the task supports it. */
 		}
     }
+    // endregion
 
     public boolean isCaptionShowing() {
         return mShow;
-- 
2.37.2

